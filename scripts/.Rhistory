strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= median_of_depth_bin, y= expression,  color=label, group=paste(label, median_of_depth_bin)), outlier.size = 0.5) + facet_wrap(~label, nrow=1) + scale_color_brewer(palette="Set1") +
ggtitle("Detail plot with UMEND reads") +
xlab("UMEND")
# + scale_color_brewer(palette="Spectral")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.shape = NA, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(median_expr~ parent_id , nrow=1) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.shape = NA, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(median_expr~ parent_id) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.shape = NA, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(median_expr~ parent_id, scales="free_y") +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size-0.5, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(median_expr~ parent_id, scales="free_y") +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(median_expr~ parent_id, scales="free_y") +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads") + xlab("UMEND")  +
theme(legend.position="none")
ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
# facet_grid(parent_id~label) +
facet_grid(. ~ parent_id, scales="free_y") +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
# scale_color_brewer(palette="Set1") +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can probably make the Y scales more comparable\nI can't put them on the same plot because they overlap") + xlab("UMEND")  +
theme(legend.position="none")
p <- ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can probably make the Y scales more comparable\nI can't put them on the same plot because they overlap") + xlab("UMEND")  +
theme(legend.position="none")
p + facet_grid(. ~ parent_id, scales="free_y") +
p + facet_grid(median_expr ~ parent_id, scales="free_y") +
ggplot(some_expression) + geom_boxplot(aes(x= median_of_depth_bin, y= expression,  color=label, group=paste(label, median_of_depth_bin)), outlier.size = 0.5) + facet_wrap(~label, nrow=1) + scale_color_brewer(palette="Set1") +
ggtitle("Detail plot with UMEND reads") +
xlab("UMEND")
p <- ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can probably make the Y scales more comparable\nI can't put them on the same plot because they overlap") + xlab("UMEND")  +
theme(legend.position="none")
p
p + facet_grid(. ~ parent_id, scales="free_y")
p <- ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
) + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can probably make the Y scales more comparable\nI can't put them on the same plot because they overlap") + xlab("UMEND")  +
theme(legend.position="none")
p + facet_grid(. ~ parent_id, scales="free_y")
p + facet_grid(median_expr ~ parent_id, scales="free_y")
ggplot(some_expression) + geom_boxplot(aes(x= median_of_depth_bin, y= expression,  color=label, group=paste(label, median_of_depth_bin)), outlier.size = 0.5) + facet_wrap(~label, nrow=1) + scale_color_brewer(palette="Set1") +
ggtitle("Detail plot with UMEND reads") +
xlab("UMEND")
# + scale_color_brewer(palette="Spectral")
p <- ggplot(some_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none")
p + facet_grid(. ~ parent_id, scales="free_y") + ggtitle("Good boxplot with UMEND reads", "the boxes are staggered so they don't overlap")
p + facet_grid(median_expr ~ parent_id, scales="free_y") + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can
probably make the Y scales more comparable\nI can't put them on the same plot without staggering because they overlap")
p + facet_grid(. ~ parent_id, scales="free_y") + ggtitle("Good boxplot with UMEND reads", "the boxes are staggered so they don't overlap. this limits their width")
p + facet_grid(median_expr ~ parent_id, scales="free_y") + ggtitle("Good boxplot with UMEND reads", "this is the best boxplot. i can probably make the Y scales more comparable\nI can't put them on the same plot without staggering because they overlap")
some_expression
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr=1.5 & expression<6 & expression >2) | median_expr!=1.5
)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y")
pretty_expression
some_expression
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr=1.5 & expression<6 & expression >2) | median_expr!=1.5
)
pretty_expression
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<6 & expression >2) | median_expr!=1.5
)
pretty_expression
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y")
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==3.5 & expression<6 & expression >1) | median_expr!=3.5
)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y")
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==5.5 & expression<8 & expression >3)
)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y")
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
)
dummy
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(aes(x= total_reads/1e6, y= expression))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression))
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_x_manual(breaks=0:10)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
pretty_expression$median_expr=factor(pretty_expression$median_expr, levels=gene_expression_levels)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
pretty_expression$median_expr=factor(pretty_expression$median_expr, levels=rev(gene_expression_levels))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
pretty_expression$median_expr
pretty_expression$median_expr=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==5.5 & expression<8 & expression >3)
)
pretty_expression$median_expr=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
levels(pretty_expression$median_expr)
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==5.5 & expression<8 & expression >3)
)
# gene_expression_levels=c(1.5,3.5, 5.5)
# dummy data to make the y axis as big as i want them
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
pretty_expression$median_expr=factor(as.character(pretty_expression$median_expr), levels=as.character(gene_expression_levels))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==5.5 & expression<8 & expression >3)
)
# gene_expression_levels=c(1.5,3.5, 5.5)
# dummy data to make the y axis as big as i want them
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
pretty_expression$median_expr_f=factor(as.character(pretty_expression$median_expr), levels=as.character(gene_expression_levels))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==5.5 & expression<8 & expression >3)
)
# gene_expression_levels=c(1.5,3.5, 5.5)
# dummy data to make the y axis as big as i want them
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
pretty_expression$median_expr_f=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=0:10)
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
pretty_expression$median_expr_f=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
dummy$median_expr_f=factor(as.character(dummy$median_expr), levels=rev(as.character(gene_expression_levels)))
pretty_expression <- some_expression %>%
dplyr::filter(
(median_expr==1.5 & expression<5 & expression >0) |
(median_expr==3.5 & expression<6 & expression >1) |
(median_expr==5.5 & expression<8 & expression >3)
)
# gene_expression_levels=c(1.5,3.5, 5.5)
# dummy data to make the y axis as big as i want them
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
pretty_expression$median_expr_f=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
dummy$median_expr_f=factor(as.character(dummy$median_expr), levels=rev(as.character(gene_expression_levels)))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
pretty_expression <- some_expression
# gene_expression_levels=c(1.5,3.5, 5.5)
# dummy data to make the y axis as big as i want them
dummy = bind_rows(
c(median_expr=1.5, expression=5),
c(median_expr=1.5, expression=0),
c(median_expr=3.5, expression=6),
c(median_expr=3.5, expression=1),
c(median_expr=5.5, expression=3),
c(median_expr=5.5, expression=8)
) %>%
mutate( parent_id="TH_Eval_018", # it doesn't matter which since they're all using the same y axis
total_reads=10*1e6
)
pretty_expression$median_expr_f=factor(as.character(pretty_expression$median_expr), levels=rev(as.character(gene_expression_levels)))
dummy$median_expr_f=factor(as.character(dummy$median_expr), levels=rev(as.character(gene_expression_levels)))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("UMEND")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  + xlab("Total reads")  +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2))
plot_title="Range of expression of genes with similar expression"
p <- ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  +
xlab("Total reads (million")  +
ylab("Expression (log2(TPM+1))") +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2)) +
ggtitle(plot_title)
p
plot_title="Range of expression of genes with similar expression"
p <- ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
strip.background = element_blank(),
strip.text.x = element_blank()
)  +
xlab("Total reads (million)")  +
ylab("Expression (log2(TPM+1))") +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2)) +
ggtitle(plot_title)
p
ggsave(paste0(plot_title, ".png"), plot=p)
plot_title="Range of expression of genes with similar expression"
p <- ggplot(pretty_expression) + geom_boxplot(aes(x= total_reads/1e6, y= expression,  color=label, group=paste(median_expr, median_of_depth_bin)), outlier.size=0.5, width = 3) +
scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
#  strip.background = element_blank(),
#  strip.text.x = element_blank()
)  +
xlab("Total reads (million)")  +
ylab("Expression (log2(TPM+1))") +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2)) +
ggtitle(plot_title)
p
ggsave(paste0("../figures/", plot_title, ".png"), plot=p, width=7, height=7)
plot_title="Range of expression of genes with similar expression"
p <- ggplot(pretty_expression) +
geom_boxplot(aes(x= total_reads/1e6, y= expression,   group=paste(median_expr, median_of_depth_bin)), #color=label,
outlier.size=0.5, width = 3) +
# scale_color_manual("median final value", values=grey(c(0.2, 0.45,  0.7))) +
theme(
#  strip.background = element_blank(),
#  strip.text.x = element_blank()
)  +
xlab("Total reads (million)")  +
ylab("Expression (log2(TPM+1))") +
theme(legend.position="none") + facet_grid(median_expr_f ~ parent_id, scales="free_y") +
geom_blank(data=dummy, aes(x= total_reads/1e6, y= expression)) +
scale_y_continuous(breaks=seq(0,10, by=2)) +
ggtitle(plot_title)
p
ggsave(paste0("../figures/", plot_title, ".png"), plot=p, width=7, height=7)
